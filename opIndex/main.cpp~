#include <iostream>
#include "opIndex.h"
int main(int argc, char **argv)
{
    int subs,pubs,atts,cons,m,valDom;
    int attDis;     // 0:uniform  1:zipf
    int valDis;     // 0:uniform
    double alpha, width;
    srand(unsigned(time(NULL)));
    freopen("paras.txt","r",stdin);
    subs = Util::String2Int(argv[1]);
    cin >> pubs>>atts>>cons>>m>>attDis>>valDis>>valDom;
    cin >> alpha >> width;
    vector<double> insertTimeList;
    vector<double> matchTimeList;
    vector<double> matchSubList;
    int testNum = 20;

    while(testNum --)
    {
        opIndex a;
        intervalGenerator gen(subs, pubs, atts, cons, m, attDis, valDis, valDom, alpha, width);
        gen.GenSubList();

        a.calcFrequency(gen.subList);

        for (int i = 0; i < subs; i++)
        {
            Timer subStart;

            a.insert(gen.subList[i]);

            int64_t subTime = subStart.elapsed_nano();
            insertTimeList.push_back((double) subTime / 1000000);
        }

        gen.GenPubList();

        for (int i = 0; i < pubs; i++)
        {
            Timer matchStart;
            int matchSubs = 0;

            a.match(gen.pubList[i], matchSubs, gen.subList);

            int64_t eventTime = matchStart.elapsed_nano();
            matchTimeList.push_back((double) eventTime / 1000000);
            matchSubList.push_back(matchSubs);
        }
    }

    string fileName = "opindexSubs.txt";
    string content = Util::Int2String(subs) + "\t" + Util::Double2String(Util::mean(insertTimeList)) + "\t" + Util::Double2String(Util::mean(matchTimeList)) + "\t" + Util::Double2String(Util::mean(matchSubList));
    Util::WriteData(fileName.c_str(),content);

    return 0;
}